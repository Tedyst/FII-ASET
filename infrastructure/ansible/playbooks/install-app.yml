- hosts: localhost
  tasks:
    - name: Get current deployed tag
      shell: "kubectl get deployment django-deploy -o jsonpath='{.spec.template.spec.containers[0].image}'"
      register: current_tag
      ignore_errors: true
    - name: Extract only the tag
      set_fact:
        current_tag: "{{ current_tag.stdout.split(':')[-1] }}"
      when: current_tag.stdout is defined
    - name: Set the tag to the latest tag if it's not defined
      set_fact:
        current_tag: "latest"
      when: current_tag.stdout is not defined
    - name: Debug current deployed tag
      debug:
        var: current_tag
    - name: Apply the Django ConfigMap
      kubernetes.core.k8s:
        template: "../../kubernetes/django-configmap.yml"
        state: present
        namespace: default
        apply: true
    - name: Apply the Django Secret
      kubernetes.core.k8s:
        definition: "{{ lookup('file', '../../kubernetes/django-secret.yml.txt') }}"
        state: present
        namespace: default
        apply: true
    - name: Delete the old Django Migration Job
      kubernetes.core.k8s:
        template: "../../kubernetes/django-migrate-job.yml"
        state: absent
        namespace: default
    - name: Apply the Django Migration Job
      kubernetes.core.k8s:
        template: "../../kubernetes/django-migrate-job.yml"
        state: present
        namespace: default
        apply: true
    - name: Wait for the Django Migration Job to complete
      kubernetes.core.k8s_info:
        kind: Job
        label_selectors:
          - job-name=django-migrate-job
        namespace: default
        wait: true
        wait_condition:
          type: Complete
          status: true
        wait_timeout: 300
    - name: Apply the Django Deployment
      kubernetes.core.k8s:
        template: "../../kubernetes/django.yml"
        state: present
        namespace: default
        apply: true
    - name: Wait for the Django Deployment to be Available
      kubernetes.core.k8s_info:
        kind: Deployment
        label_selectors:
          - app=django
        namespace: default
        wait: true
        wait_condition:
          type: Available
          status: true
        wait_timeout: 300
      register: django_deploy_info
    - name: Reset the tag to the current tag if the deployment is not ready
      set_fact:
        tag: "{{ current_tag }}"
      when: not django_deploy_info
    - name: Rollback the Django Deployment if it's not ready
      kubernetes.core.k8s:
        template: "../../kubernetes/django.yml"
        state: present
        namespace: default
        apply: true
      when: not django_deploy_info
    - name: Apply the Django Service
      kubernetes.core.k8s:
        definition: "{{ lookup('file', '../../kubernetes/django-service.yml') }}"
        state: present
        namespace: default
        apply: true
    - name: Apply the Django Ingress
      kubernetes.core.k8s:
        template: "../../kubernetes/django-ingress.yml"
        state: present
        namespace: default
        apply: true
    - name: Apply the Nginx Static Deployment
      kubernetes.core.k8s:
        template: "../../kubernetes/nginx-static.yml"
        state: present
        namespace: default
        apply: true
    - name: Apply the Nginx Static Service
      kubernetes.core.k8s:
        template: "../../kubernetes/nginx-static-service.yml"
        state: present
        namespace: default
        apply: true
    - name: Apply the Nginx Static Ingress
      kubernetes.core.k8s:
        template: "../../kubernetes/nginx-static-ingress.yml"
        state: present
        namespace: default
        apply: true
    - name: Apply the Celery Worker Deployment
      kubernetes.core.k8s:
        template: "../../kubernetes/celery.yml"
        state: present
        namespace: default
        apply: true
