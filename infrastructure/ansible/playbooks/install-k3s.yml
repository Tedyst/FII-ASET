- name: Install k3s
  hosts: server
  become: true
  roles:
    - role: k3s.orchestration.k3s_server
- name: Create service accounts
  hosts: server
  become: true
  tasks:
    # - name: Get admin service account
    #   ansible.builtin.shell: |
    #     k3s kubectl get serviceaccount admin
    #   register: admin_service_account
    #   ignore_errors: true
    # - name: Create admin service account
    #   ansible.builtin.shell: |
    #     k3s kubectl create serviceaccount admin
    #     k3s kubectl create clusterrolebinding admin --serviceaccount=default:admin --clusterrole=cluster-admin
    #   when: admin_service_account.rc != 0
    # - name: Get admin service account token
    #   ansible.builtin.shell: |
    #     k3s kubectl get secret $(k3s kubectl get serviceaccount admin -o jsonpath='{.secrets[0].name}') -o jsonpath='{.data.token}' | base64 --decode
    #   register: admin_token
    # - name: Set admin service account token
    #   ansible.builtin.set_fact:
    #     admin_token: "{{ admin_token.stdout }}"
    - name: Get kubeconfig
      ansible.builtin.shell: |
        k3s kubectl config view --raw
      register: kubeconfig
    - name: Set kubeconfig
      ansible.builtin.set_fact:
        kubeconfig: "{{ kubeconfig.stdout }}"
    - name: Save kubeconfig
      become: false
      ansible.builtin.copy:
        content: "{{ kubeconfig }}"
        dest: "{{ playbook_dir }}/../kubeconfigs/cluster"
      delegate_to: localhost
    - name: Replace 127.0.0.1 to aset.tedyst.ro
      ansible.builtin.replace:
        path: "{{ playbook_dir }}/../kubeconfigs/cluster"
        regexp: '127\.0\.0\.1'
        replace: 'aset.tedyst.ro'
      delegate_to: localhost
      become: false
