---
- name: Create Kubernetes service accounts and generate kubeconfig
  hosts: target_host
  become: yes
  tasks:
    - name: Read k3s kubeconfig file to extract CA cert
      slurp:
        src: /etc/rancher/k3s/k3s.yaml
      register: k3s_kubeconfig

    - name: Write k3s kubeconfig to ~/.kube/config
      copy:
        content: "{{ k3s_kubeconfig.content | b64decode }}"
        dest: "{{ ansible_env.HOME }}/.kube/config"
        mode: '0600'
      delegate_to: localhost
      become: false

    - name: Extract certificate-authority-data from k3s.yaml
      set_fact:
        ca_data: "{{ (k3s_kubeconfig.content | b64decode) | from_yaml | json_query('clusters[0].cluster.certificate-authority-data') }}"

    - name: Create Kubernetes service accounts
      k8s:
        api_version: v1
        kind: ServiceAccount
        name: "{{ item }}"
        namespace: default
      loop: "{{ kubernetes_service_accounts }}"
      register: sa_result

    - name: Get the token for the service account
      command: kubectl get secret -n default -o jsonpath='{.items[?(@.metadata.annotations.kubernetes\.io/service-account\.name=="{{ item }}")].data.token}' | base64 --decode
      loop: "{{ kubernetes_service_accounts }}"
      register: token_result
      when: sa_result.changed

    - name: Generate kubeconfig file
      template:
        src: templates/kubeconfig.yml.j2
        dest: "service_accounts/{{ item }}-kubeconfig"
        mode: '0600'
      loop: "{{ kubernetes_service_accounts }}"
      when: token_result is defined
