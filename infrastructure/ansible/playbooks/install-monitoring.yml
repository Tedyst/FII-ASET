- hosts: localhost
  tasks:
    - name: Create a namespace monitoring
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: monitoring
    - name: Add prometheus Helm repo
      kubernetes.core.helm_repository:
        name: prometheus-community
        repo_url: "https://prometheus-community.github.io/helm-charts"
    - name: Deploy Prometheus inside the monitoring namespace
      kubernetes.core.helm:
        name: prometheus
        chart_ref: prometheus-community/prometheus
        release_namespace: monitoring
        values:
          server:
            global:
              scrape_interval: 15s
              evaluation_interval: 15s
          serverFiles:
            alerting_rules.yml: "{{ lookup('file','../../config/prometheus-alerts.yml') | from_yaml }}"
          extraScrapeConfigs: |
            - job_name: 'prometheus-blackbox-exporter-http'
              metrics_path: /probe
              params:
                module: [http_2xx]
              static_configs:
                - targets:
                  - http://{{ django_hostname }}/
                  - https://{{ django_hostname }}/
              relabel_configs:
                - source_labels: [__address__]
                  target_label: __param_target
                - source_labels: [__param_target]
                  target_label: instance
                - target_label: __address__
                  replacement: blackbox-exporter-prometheus-blackbox-exporter:9115
    - name: Add grafana Helm repo
      kubernetes.core.helm_repository:
        name: grafana
        repo_url: "https://grafana.github.io/helm-charts"
    - name: Deploy Grafana inside the monitoring namespace
      kubernetes.core.helm:
        name: grafana
        chart_ref: grafana/grafana
        release_namespace: monitoring
        values:
          ingress:
            enabled: true
            hosts:
              - aset.tedyst.ro
            path: /grafana
          adminPassword: "{{ grafana_password }}"
          auth:
            anonymous:
              enabled: false
          datasources:
            datasources.yaml:
              apiVersion: 1
              datasources:
                - name: Prometheus
                  type: prometheus
                  access: proxy
                  orgId: 1
                  url: http://prometheus-server.monitoring.svc.cluster.local
                  isDefault: true
                  version: 1
                  editable: false
                - name: Loki
                  type: loki
                  access: proxy
                  orgId: 1
                  url: http://loki.monitoring.svc.cluster.local:3100
                  isDefault: false
                  version: 1
                  editable: false
          grafana.ini:
            server:
              domain: "aset.tedyst.ro"
              root_url: "https://aset.tedyst.ro/grafana"
              serve_from_sub_path: true
          dashboardProviders:
            dashboardproviders.yaml:
              apiVersion: 1
              providers:
                - name: default
                  orgId: 1
                  folder:
                  type: file
                  disableDeletion: true
                  editable: false
                  options:
                    path: /var/lib/grafana/dashboards/default
          dashboards:
            default:
              node-exporter:
                gnetId: 1860
                revision: 37
                datasource: Prometheus
              rabbitmq-overview:
                gnetId: 10991
                revision: 14
                datasource: Prometheus
              traefik:
                gnetId: 4475
                revision: 5
                datasource: Prometheus
              postgres:
                gnetId: 9628
                revision: 7
                datasource: Prometheus
    - name: Add celery-exporter Helm repo
      kubernetes.core.helm_repository:
        name: celery-exporter
        repo_url: "https://danihodovic.github.io/celery-exporter/"
    - name: Get RabbitMQ credentials from the secret
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        namespace: monitoring
        name: celery-exporter-rabbitmq-user-user-credentials
      register: rabbitmq_secret
    - name: Create celery-exporter connection string
      set_fact:
        celery_connection_string: "amqp://{{ rabbitmq_secret['resources'][0]['data']['username'] | b64decode }}:{{ rabbitmq_secret['resources'][0]['data']['password'] | b64decode }}@rabbitmq-cluster.databases.svc.cluster.local:5672/django"
    - name: Create celery-exporter secret
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: celery-exporter
            namespace: monitoring
          data:
            connection_string: "{{ celery_connection_string | b64encode }}"
    - name: Deploy Celery-exporter inside the monitoring namespace
      kubernetes.core.helm:
        name: celery-exporter
        chart_ref: celery-exporter/celery-exporter
        release_namespace: monitoring
        values:
          env:
            - name: CE_BROKER_URL
              valueFrom:
                secretKeyRef:
                  name: celery-exporter
                  key: connection_string
          podAnnotations:
            prometheus.io/scrape: "true"
            prometheus.io/port: "9808"
            prometheus.io/path: "/metrics"
          replicaCount: 1
    - name: Deploy Grafana Loki inside the monitoring repository (Single Binary)
      kubernetes.core.helm:
        name: loki
        chart_ref: grafana/loki
        release_namespace: monitoring
        values:
          resultsCache:
            enabled: false
          chunksCache:
            enabled: false
          loki:
            auth_enabled: false
            commonConfig:
              replication_factor: 1
            schemaConfig:
              configs:
                - from: "2024-04-01"
                  store: tsdb
                  object_store: s3
                  schema: v13
                  index:
                    prefix: loki_index_
                    period: 24h
            pattern_ingester:
              enabled: true
            limits_config:
              allow_structured_metadata: true
              volume_enabled: true
              retention_period: 672h # 28 days retention
            compactor:
              retention_enabled: true
              delete_request_store: s3
            ruler:
              enable_api: true
          minio:
            enabled: true
          deploymentMode: SingleBinary
          singleBinary:
            replicas: 1
          # Zero out replica counts of other deployment modes
          backend:
            replicas: 0
          read:
            replicas: 0
          write:
            replicas: 0
          ingester:
            replicas: 0
          querier:
            replicas: 0
          queryFrontend:
            replicas: 0
          queryScheduler:
            replicas: 0
          distributor:
            replicas: 0
          compactor:
            replicas: 0
          indexGateway:
            replicas: 0
          bloomCompactor:
            replicas: 0
          bloomGateway:
            replicas: 0
    - name: Deploy Grafana Promtail inside the monitoring repository
      kubernetes.core.helm:
        name: promtail
        chart_ref: grafana/promtail
        release_namespace: monitoring
        values:
          promtail:
            clients:
              - url: http://loki.monitoring.svc.cluster.local:3100/loki/api/v1/push
    - name: Deploy Blackbox Exporter inside the monitoring repository
      kubernetes.core.helm:
        name: blackbox-exporter
        chart_ref: prometheus-community/prometheus-blackbox-exporter
        release_namespace: monitoring
